{"version":3,"file":"static/js/505.5c9f1d20.chunk.js","mappings":"2OAoEA,UA1D8B,WAC5B,OAAsCA,EAAAA,EAAAA,UAA+B,CAAC,GAAE,eAAjEC,EAAW,KAAEC,EAAc,KAC1BC,GAAcC,EAAAA,EAAAA,MAAdD,UACAE,GAAaC,EAAAA,EAAAA,KACnB,SAACC,GAAgB,OAAKA,EAAMC,mBAAmB,IADzCH,SAGFI,GAAWC,EAAAA,EAAAA,MAqBjB,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,yCAAG,WAAOC,GAAU,4EACN,OAAhCJ,GAASK,EAAAA,EAAAA,iBAAe,IAAQ,UACbC,EAAAA,EAAAA,kBAAiBF,GAAI,KAAD,EAA7B,QAEGG,KAFPC,EAAI,QAEY,iDAGtBf,EAAee,GACfR,GAASK,EAAAA,EAAAA,iBAAe,IAAO,2CAChC,gBATmB,sCAWhBX,GACFS,EAAeT,EAEnB,GAAG,CAACA,EAAWM,IAEfS,QAAQC,IAAIlB,IAGV,UAAC,EAAAmB,IAAG,YACAf,IACA,SAAC,EAAAe,IAAG,CACFC,GAAI,OACJC,GAAI,OACJC,QAAS,OACTC,eAAgB,SAChBC,GAAI,EAAE,UAEN,SAAC,IAAe,MAGnBxB,GAAeI,IACd,UAAC,EAAAe,IAAG,CAACK,GAAI,EAAE,WACT,gBAAKC,IAAKzB,EAAY0B,OAAQC,IAAI,MAClC,UAAC,EAAAR,IAAG,CAACS,GAAI,IAAKC,MAAO,QAASC,SAAU,EAAGC,GAAI,EAAGP,GAAI,EAAE,UAAC,gBACzCxB,EAAYgC,gBAE5B,UAAC,EAAAb,IAAG,CAACS,GAAI,IAAKC,MAAO,QAASC,SAAU,EAAGC,GAAI,EAAE,UAAC,aACrC/B,EAAYiC,aAEzB,UAAC,EAAAd,IAAG,CAACS,GAAI,IAAKC,MAAO,QAASC,SAAU,EAAE,UAAC,UACjC9B,EAAYkC,cAMhC,C","sources":["Components/AppDetails/GameDatails.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchGameDetails } from 'Service/getSearch.service';\r\nimport { IAppDetails } from 'Types/gameItemsType';\r\nimport { Box } from 'Theme/Box';\r\nimport { isLoadedStatus } from 'Redux/Pagination/paginationSlice';\r\nimport { SpinnerCircular } from 'spinners-react';\r\nimport { RootState } from 'Redux/store';\r\n\r\nconst GameDatails: React.FC = () => {\r\n  const [gameDetails, setGameDetails] = useState<Partial<IAppDetails>>({});\r\n  const { detailsId } = useParams();\r\n  const { isLoaded } = useSelector(\r\n    (state: RootState) => state.setPaginationStatus\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const getGameDatails = async (id: string) => {\r\n      dispatch(isLoadedStatus(false));\r\n      const data = await fetchGameDetails(id);\r\n\r\n      if (data === undefined) {\r\n        return;\r\n      }\r\n      setGameDetails(data);\r\n      dispatch(isLoadedStatus(true));\r\n    };\r\n\r\n    if (detailsId) {\r\n      getGameDatails(detailsId);\r\n    }\r\n  }, [detailsId, dispatch]);\r\n\r\n  console.log(gameDetails);\r\n\r\n  return (\r\n    <Box>\r\n      {!isLoaded && (\r\n        <Box\r\n          ml={'auto'}\r\n          mr={'auto'}\r\n          display={'flex'}\r\n          justifyContent={'center'}\r\n          mt={4}\r\n        >\r\n          <SpinnerCircular />\r\n        </Box>\r\n      )}\r\n      {gameDetails && isLoaded && (\r\n        <Box mt={4}>\r\n          <img src={gameDetails.imgUrl} alt=\"\" />\r\n          <Box as={'p'} color={'white'} fontSize={4} mb={4} mt={4}>\r\n            Description: {gameDetails.description}\r\n          </Box>\r\n          <Box as={'p'} color={'white'} fontSize={4} mb={4}>\r\n            Released: {gameDetails.released}\r\n          </Box>\r\n          <Box as={'p'} color={'white'} fontSize={4}>\r\n            Price: {gameDetails.price}\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GameDatails;\r\n"],"names":["useState","gameDetails","setGameDetails","detailsId","useParams","isLoaded","useSelector","state","setPaginationStatus","dispatch","useDispatch","useEffect","getGameDatails","id","isLoadedStatus","fetchGameDetails","undefined","data","console","log","Box","ml","mr","display","justifyContent","mt","src","imgUrl","alt","as","color","fontSize","mb","description","released","price"],"sourceRoot":""}