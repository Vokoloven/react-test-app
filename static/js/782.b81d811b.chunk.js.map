{"version":3,"file":"static/js/782.b81d811b.chunk.js","mappings":"kPAYaA,EAAuB,WAiDlC,IAhDA,OAAkCC,EAAAA,EAAAA,UAAiB,GAAE,eAA9CC,EAAS,KAAEC,EAAY,KAC9B,GAAgCF,EAAAA,EAAAA,UAAiB,GAAE,eAA5CG,EAAQ,KAAEC,EAAW,KAC5B,GAAsCJ,EAAAA,EAAAA,UAAiB,GAAE,eAAlDK,EAAW,KAAEC,EAAc,KAC5BC,EAAuB,GACvBC,GAAWC,EAAAA,EAAAA,MAEXC,GAAiBC,EAAAA,EAAAA,KACrB,SAACC,GAAgB,OAAKA,EAAMC,oBAAoBC,UAAU,IAEpDC,GAAkBJ,EAAAA,EAAAA,KACxB,SAACC,GAAgB,OAAKA,EAAMI,YAAY,IADlCD,cAGAD,GAAeH,EAAAA,EAAAA,KACrB,SAACC,GAAgB,OAAKA,EAAMC,mBAAmB,IADzCC,WAIFG,GAAaN,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMM,QAAQC,KAAK,IAgC/DC,EAAInB,EAAWmB,GAAKjB,EAAUiB,IACrCb,EAAWc,KAAKD,GAOlB,OAJAE,EAAAA,EAAAA,YAAU,WACRd,GAASe,EAAAA,EAAAA,eAAclB,GACzB,GAAG,CAACA,EAAaG,KAGf,SAAC,EAAAgB,IAAG,UACiB,WAAlBT,IAA+BD,GAA6B,KAAfG,IAC5C,UAAC,EAAAO,IAAG,CAACC,QAAS,OAAQC,eAAe,SAAQ,WAC3C,SAAC,EAAAC,uBAAsB,CAACC,GAAI,OAAQC,QAxBtB,WACff,GACHZ,GAAa,kBAAM,CAAC,IAGlBD,EAAY,IACdC,GAAa,kBAAMD,EAAY,CAAC,IAChCG,GAAY,kBAAMD,EAAW,CAAC,IAC9BG,EAAeL,EAAY,GAE/B,EAcmE,SACxD,OAEH,SAAC,EAAA6B,WAAU,UACRvB,EAAWwB,KAAI,SAACC,EAAMC,GACrB,OACE,SAAC,EAAAC,iBAAgB,CACfC,UAAW9B,IAAgB2B,EAAO,SAAW,WAC7CH,QAAS,kBAlDE,SAACG,GAC1B1B,GAAe,kBAAM0B,CAAI,GAC3B,CAgD+BI,CAAmBJ,EAAK,EAAC,SAGvCA,GAFIC,EAKX,OAEF,SAAC,EAAAI,wBAAuB,CAACT,GAAI,QAASC,QAtDxB,WAChBnB,IAICI,GACHZ,GAAa,kBAAM,CAAC,IAGtBA,GAAa,kBAAMD,EAAY,CAAC,IAChCG,GAAY,kBAAMD,EAAW,CAAC,IAC9BG,EAAeH,EAAW,GAC5B,EA0CqE,SAC1D,UAMb,C,qOC9Fa+B,GAAmBI,EAAAA,EAAAA,IAAO,MAAPA,CAAa,2WAMlC,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,IACd,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,OAAO,IAKzB,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,OAAOG,IAAI,IAQxB,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,OAAOG,IAAI,IAInCjB,GAAyBW,EAAAA,EAAAA,IAAO,MAAPA,CAAa,+SAMxC,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,KAAK,IACd,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,OAAO,IAOzB,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,OAAOG,IAAI,IAInCP,GAA0BC,EAAAA,EAAAA,IAAO,MAAPA,CAAa,8SAMzC,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,KAAK,IACd,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,OAAO,IAOzB,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,OAAOG,IAAI,IAInCd,GAAaQ,EAAAA,EAAAA,IAAO,MAAPA,CAAa,yC","sources":["Components/Pagination/Pagination.tsx","Components/Pagination/StyledComponents/StyledPagination.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { isCurrentPage } from 'Redux/Pagination/paginationSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from 'Redux/store';\r\nimport {\r\n  StyledNumEclipse,\r\n  StyledList,\r\n  StyledArrowEclipseLeft,\r\n  StyledArrowEclipseRight,\r\n} from '../Pagination/StyledComponents/StyledPagination';\r\nimport { Box } from 'Theme/Box';\r\n\r\nexport const Pagination: React.FC = () => {\r\n  const [firstPage, setFirstPage] = useState<number>(1);\r\n  const [lastPage, setLastPage] = useState<number>(3);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const totalPages: number[] = [];\r\n  const dispatch = useDispatch();\r\n\r\n  const isRenderedPage = useSelector(\r\n    (state: RootState) => state.setPaginationStatus.isResponse\r\n  );\r\n  const { statusLikeBtn } = useSelector(\r\n    (state: RootState) => state.setBtnStatus\r\n  );\r\n  const { isResponse } = useSelector(\r\n    (state: RootState) => state.setPaginationStatus\r\n  );\r\n\r\n  const inputValue = useSelector((state: RootState) => state.setGame.value);\r\n\r\n  const handlerCurrentPage = (page: number): void => {\r\n    setCurrentPage(() => page);\r\n  };\r\n\r\n  const incrementPage = (): void => {\r\n    if (isRenderedPage) {\r\n      return;\r\n    }\r\n\r\n    if (!isResponse) {\r\n      setFirstPage(() => 1);\r\n    }\r\n\r\n    setFirstPage(() => firstPage + 1);\r\n    setLastPage(() => lastPage + 1);\r\n    setCurrentPage(lastPage + 1);\r\n  };\r\n\r\n  const decrementPage = (): void => {\r\n    if (!isResponse) {\r\n      setFirstPage(() => 3);\r\n    }\r\n\r\n    if (firstPage > 1) {\r\n      setFirstPage(() => firstPage - 1);\r\n      setLastPage(() => lastPage - 1);\r\n      setCurrentPage(firstPage - 1);\r\n    }\r\n  };\r\n\r\n  for (let i = firstPage; i <= lastPage; i++) {\r\n    totalPages.push(i);\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(isCurrentPage(currentPage));\r\n  }, [currentPage, dispatch]);\r\n\r\n  return (\r\n    <Box>\r\n      {statusLikeBtn === 'search' && !isResponse && inputValue !== '' && (\r\n        <Box display={'flex'} justifyContent=\"center\">\r\n          <StyledArrowEclipseLeft id={'left'} onClick={decrementPage}>\r\n            {'<'}\r\n          </StyledArrowEclipseLeft>\r\n          <StyledList>\r\n            {totalPages.map((page, index) => {\r\n              return (\r\n                <StyledNumEclipse\r\n                  className={currentPage === page ? 'active' : 'inactive'}\r\n                  onClick={() => handlerCurrentPage(page)}\r\n                  key={index}\r\n                >\r\n                  {page}\r\n                </StyledNumEclipse>\r\n              );\r\n            })}\r\n          </StyledList>\r\n          <StyledArrowEclipseRight id={'right'} onClick={incrementPage}>\r\n            {'>'}\r\n          </StyledArrowEclipseRight>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledNumEclipse = styled('div')`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${p => p.theme.colors.white};\r\n  background-color: ${p => p.theme.colors.eclipse};\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: ${p => p.theme.colors.card};\r\n  }\r\n\r\n  &:not(:last-child) {\r\n    margin-right: 7px;\r\n  }\r\n\r\n  &.active {\r\n    background-color: ${p => p.theme.colors.card};\r\n  }\r\n`;\r\n\r\nexport const StyledArrowEclipseLeft = styled('div')`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${p => p.theme.colors.black};\r\n  background-color: ${p => p.theme.colors.eclipse};\r\n  border-radius: 50%;\r\n  margin-right: 7px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: ${p => p.theme.colors.card};\r\n  }\r\n`;\r\n\r\nexport const StyledArrowEclipseRight = styled('div')`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${p => p.theme.colors.black};\r\n  background-color: ${p => p.theme.colors.eclipse};\r\n  border-radius: 50%;\r\n  margin-left: 7px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: ${p => p.theme.colors.card};\r\n  }\r\n`;\r\n\r\nexport const StyledList = styled('div')`\r\n  display: flex;\r\n`;\r\n"],"names":["Pagination","useState","firstPage","setFirstPage","lastPage","setLastPage","currentPage","setCurrentPage","totalPages","dispatch","useDispatch","isRenderedPage","useSelector","state","setPaginationStatus","isResponse","statusLikeBtn","setBtnStatus","inputValue","setGame","value","i","push","useEffect","isCurrentPage","Box","display","justifyContent","StyledArrowEclipseLeft","id","onClick","StyledList","map","page","index","StyledNumEclipse","className","handlerCurrentPage","StyledArrowEclipseRight","styled","p","theme","colors","white","eclipse","card","black"],"sourceRoot":""}