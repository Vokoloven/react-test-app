{"version":3,"file":"static/js/441.f82a3c48.chunk.js","mappings":"0OACA,IAAMA,EAASC,EAAQ,MAEVC,EAAa,SAACC,GAAS,OAAKC,WAAWD,EAAEE,QAAQ,MAAO,MAAQ,CAAE,EAElEC,EAAgB,SAACC,EAA4BC,GACxD,MAA2B,UAAvBD,GAAkCA,EACTC,EACxBC,QACAC,MAAK,SAACC,EAAQC,GAAM,OAAKV,EAAWS,EAAEE,OAASX,EAAWU,EAAEC,MAAM,IAGrC,WAAvBN,EACmBC,EACzBC,QACAC,MAAK,SAACC,EAAQC,GAAM,OAAKV,EAAWU,EAAEC,OAASX,EAAWS,EAAEE,MAAM,IAIhE,EACT,EAEaC,EAAe,SAACP,EAA4BC,GACvD,MAA2B,UAAvBD,GAAkCA,EACVC,EAAME,MAC9B,SAACC,EAAQC,GAAM,OACbZ,EAAO,IAAIe,KAAKJ,EAAEK,WAAWC,OAAO,YACpCjB,EAAO,IAAIe,KAAKH,EAAEI,WAAWC,OAAO,WAAW,IAI1B,WAAvBV,GAAmCA,EACVC,EAAME,MAC/B,SAACC,EAAQC,GAAM,OACbZ,EAAO,IAAIe,KAAKH,EAAEI,WAAWC,OAAO,YACpCjB,EAAO,IAAIe,KAAKJ,EAAEK,WAAWC,OAAO,WAAW,IAI9C,EACT,C","sources":["Helpers/sort.ts"],"sourcesContent":["import { IItem } from 'Types/gameItemsType';\r\nconst Moment = require('moment');\r\n\r\nexport const parsePrice = (x: string) => parseFloat(x.replace(/^\\$/, '')) || 0;\r\n\r\nexport const sortedByPrice = (filterButtonStatus: string, props: IItem[]) => {\r\n  if (filterButtonStatus === 'lower' && filterButtonStatus) {\r\n    const sortedByLowerPrice = props\r\n      .slice()\r\n      .sort((a: any, b: any) => parsePrice(a.price) - parsePrice(b.price));\r\n\r\n    return sortedByLowerPrice;\r\n  } else if (filterButtonStatus === 'bigger') {\r\n    const sortedByBiggerPrice = props\r\n      .slice()\r\n      .sort((a: any, b: any) => parsePrice(b.price) - parsePrice(a.price));\r\n\r\n    return sortedByBiggerPrice;\r\n  }\r\n  return [];\r\n};\r\n\r\nexport const sortedByDate = (filterButtonStatus: string, props: IItem[]) => {\r\n  if (filterButtonStatus === 'lower' && filterButtonStatus) {\r\n    const sortedByLowerDate = props.sort(\r\n      (a: any, b: any) =>\r\n        Moment(new Date(a.released)).format('YYYYMMDD') -\r\n        Moment(new Date(b.released)).format('YYYYMMDD')\r\n    );\r\n    return sortedByLowerDate;\r\n  }\r\n  if (filterButtonStatus === 'bigger' && filterButtonStatus) {\r\n    const sortedByHigherDate = props.sort(\r\n      (a: any, b: any) =>\r\n        Moment(new Date(b.released)).format('YYYYMMDD') -\r\n        Moment(new Date(a.released)).format('YYYYMMDD')\r\n    );\r\n    return sortedByHigherDate;\r\n  }\r\n  return [];\r\n};\r\n\r\n// export const filterToggle = (\r\n//   filterButtonStatus: string,\r\n//   props: IItem[],\r\n//   filterToggleStatus: string\r\n// ) => {\r\n//   if (filterToggleStatus === 'priceBtn') {\r\n//     const sortedPrice = sortedByPrice(filterButtonStatus, props);\r\n//     return sortedPrice;\r\n//   } else if (filterToggleStatus === 'dateBtn') {\r\n//     const sortedDates = sortedByDate(filterButtonStatus, _,  props);\r\n//     return sortedDates;\r\n//   }\r\n//   return [];\r\n// };\r\n"],"names":["Moment","require","parsePrice","x","parseFloat","replace","sortedByPrice","filterButtonStatus","props","slice","sort","a","b","price","sortedByDate","Date","released","format"],"sourceRoot":""}